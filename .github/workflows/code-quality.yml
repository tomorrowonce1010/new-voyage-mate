name: Code Quality & Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan weekly on Monday at 9:00 AM
    - cron: '0 9 * * 1'

jobs:
  # CodeQL security scanning
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'javascript', 'python' ]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v4
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{ matrix.language }}"

  # Dependency vulnerability scanning
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v4
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Python code quality
  python-quality:
    name: Python Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install tools
      run: |
        pip install flake8 black isort bandit
        
    - name: Run flake8
      run: |
        flake8 embedding-service/ rag-service/ --count --statistics --max-line-length=127
      continue-on-error: true
        
    - name: Check formatting with black
      run: |
        black --check embedding-service/ rag-service/ || true
      continue-on-error: true
        
    - name: Check import sorting
      run: |
        isort --check-only embedding-service/ rag-service/ || true
      continue-on-error: true
        
    - name: Security check with bandit
      run: |
        bandit -r embedding-service/ rag-service/ -ll || true
      continue-on-error: true

  # JavaScript/TypeScript code quality
  javascript-quality:
    name: JavaScript Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run ESLint
      working-directory: ./frontend
      run: npx eslint src/ --ext .js,.jsx,.ts,.tsx --max-warnings=0 || true
      continue-on-error: true
      
    - name: Check for npm audit vulnerabilities
      working-directory: ./frontend
      run: npm audit --audit-level=moderate || true
      continue-on-error: true

  # Java code quality
  java-quality:
    name: Java Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Run Maven checkstyle
      working-directory: ./backend
      run: mvn checkstyle:check || true
      continue-on-error: true
