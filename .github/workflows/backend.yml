name: Backend CI/CD

on:
  workflow_call:  # 允许被其他 workflow 调用
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  build-and-test:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    # ⚡ 优化：缓存 Maven 本地仓库，加速依赖下载
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
        
    - name: Build with Maven
      working-directory: ./backend
      run: mvn clean package -DskipTests
    
    # ⚡ 优化：缓存编译后的 target 目录，供后续 job 复用
    - name: Cache Maven target
      uses: actions/cache/save@v4
      with:
        path: backend/target
        key: ${{ runner.os }}-backend-target-${{ github.sha }}
      
    - name: Run tests
      working-directory: ./backend
      run: mvn test
      # continue-on-error: true
      
    - name: Generate JaCoCo coverage report
      working-directory: ./backend
      run: mvn jacoco:report
      continue-on-error: true
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      if: always() && hashFiles('backend/target/site/jacoco/jacoco.xml') != ''
      with:
        files: ./backend/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: backend-jar
        path: backend/target/*.jar
        retention-days: 7

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    # ⚡ 优化：恢复 Maven 本地仓库缓存
    - name: Restore Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    # ⚡ 优化：复用之前编译的 target 目录，避免重新编译
    - name: Restore Maven target
      uses: actions/cache/restore@v4
      with:
        path: backend/target
        key: ${{ runner.os }}-backend-target-${{ github.sha }}
        
    - name: Run Maven verify
      working-directory: ./backend
      run: mvn verify -DskipTests -Dcheckstyle.skip=false
